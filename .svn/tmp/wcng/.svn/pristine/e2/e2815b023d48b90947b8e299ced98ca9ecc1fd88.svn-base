package com.discountinfo;

import android.app.ListActivity;
import android.content.Context;
import android.content.Intent;
import android.content.res.AssetManager;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ArrayAdapter; 
import android.widget.Button;
import android.widget.TextView;
import android.os.Bundle;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;

public class MainActivity extends ListActivity {
	
	@Override
    public void onCreate(Bundle savedInstanceState) {
		
		File dbdir = new File("/data/data/com.discountinfo/databases");
		
		if(!dbdir.exists())
			dbdir.mkdir();
		
        File dbfile = new File("/data/data/com.discountinfo/databases/loc.db");
        
        if(!dbfile.exists())
        {
        	AssetManager assetManager = getResources().getAssets();
        	try{
        		InputStream is = assetManager.open("database/loc.db", assetManager.ACCESS_BUFFER);
        		
        		long filesize = is.available();
        		byte [] tempdata = new byte[(int)filesize];
        		is.read(tempdata);
        		is.close();
        		
        		dbfile.createNewFile();
        		FileOutputStream fo = new FileOutputStream(dbfile);
        		fo.write(tempdata);
        		fo.close();
        	} catch(IOException e){
        		Log.e("testbed", e.getMessage());
        	}
        }
        
        File dbfile2 = new File("/data/data/com.discountinfo/databases/chain.db");
        
        if(!dbfile2.exists())
        {
        	AssetManager assetManager = getResources().getAssets();
        	try{
        		InputStream is = assetManager.open("database/chain.db", assetManager.ACCESS_BUFFER);
        		
        		long filesize = is.available();
        		byte [] tempdata = new byte[(int)filesize];
        		is.read(tempdata);
        		is.close();
        		
        		dbfile2.createNewFile();
        		FileOutputStream fo = new FileOutputStream(dbfile2);
        		fo.write(tempdata);
        		fo.close();
        	} catch(IOException e){
        		Log.e("testbed", e.getMessage());
        	}
        }
       
		super.onCreate(savedInstanceState);
		
		
        setContentView(R.layout.main);
        ArrayList<Crinfo> m_orders = new ArrayList<Crinfo>();
        
        Crinfo p1 = new Crinfo("SKT", "T");
        Crinfo p2 = new Crinfo("KT", "Show");
        Crinfo p3 = new Crinfo("LGT", "Oz");
        
        m_orders.add(p1);
        m_orders.add(p2);
        m_orders.add(p3);
        
        
        CarrerAdapter m_adapter = new CarrerAdapter(this, R.layout.row, m_orders);
        setListAdapter(m_adapter);
        
    	final Button gotoList = (Button) findViewById(R.id.gobtn);
		gotoList.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(MainActivity.this, Menu.class);
				startActivity(intent);
			}
		});
    }
	
	private class CarrerAdapter extends ArrayAdapter<Crinfo> {

        private ArrayList<Crinfo> items;

        public CarrerAdapter(Context context, int textViewResourceId, ArrayList<Crinfo> items) {
                super(context, textViewResourceId, items);
                this.items = items;
        }
        @Override
        public View getView(int position, View convertView, ViewGroup parent) {
                View v = convertView;
                if (v == null) {
                    LayoutInflater vi = (LayoutInflater)getSystemService(Context.LAYOUT_INFLATER_SERVICE);
                    v = vi.inflate(R.layout.row, null);
                }
                Crinfo p = items.get(position);
                if (p != null) {
                        TextView tt = (TextView) v.findViewById(R.id.toptext);
                        TextView bt = (TextView) v.findViewById(R.id.bottomtext);
                        if (tt != null){
                        	tt.setText(p.getName());                            
                        }
                        if(bt != null){
                        		bt.setText(p.getMemname());
                        }
                }
                return v;
        }
}
    class Crinfo {
        
        private String Name;
        private String Memname;
        
        public Crinfo(String _Name, String _Memname){
        	this.Name = _Name;
        	this.Memname = _Memname;
        }
        
        public String getName() {
            return Name;
        }

        public String getMemname() {
            return Memname;
        }

    }
}